name: Android Build

on: pull_request

jobs:
    build:

        runs-on: ubuntu-latest

        steps:
            - uses: appleboy/telegram-action@master
              with:
                  to: ${{ secrets.TELEGRAM_MOHSEN_ID }}
                  token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
                  format: markdown
                  message: 'Hi sir build branch *[${{ github.head_ref }}]* get started! üöÄ'

            - uses: actions/checkout@v3

            - name: Share checkout complete on Telegram
              env:
                  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
                  TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
                  TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_CHANNEL_TOPIC_ID }}
                  MESSAGE: '*[${{ github.head_ref }}]* checkout branch complete! üåü‚ú®‚úÖüöÄ'
              run: |
                  curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage -d chat_id=${TELEGRAM_CHANNEL_ID} -d message_thread_id=${TELEGRAM_TOPIC_ID} -d text="${MESSAGE}"

            - name: Set Up JDK
              uses: actions/setup-java@v3
              with:
                distribution: 'zulu'
                java-version: 17

            - name: Change wrapper permissions
              run: chmod +x ./gradlew

#            - name: Spotless Check
#              continue-on-error: false
#              run: ./gradlew spotlessCheck --no-configuration-cache
#
#            - name: Run Tests
#              continue-on-error: false
#              run: ./gradlew testDebugUnitTest
#
#            - name: Share unit test Success on Telegram
#              if: ${{ success() }}
#              env:
#                  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#                  TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
#                  TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_CHANNEL_TOPIC_ID }}
#                  MESSAGE: '*[${{ github.head_ref }}]* unit tests SUCCESS ‚úÖüéâüî¨üëç'
#              run: |
#                  curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage -d chat_id=${TELEGRAM_CHANNEL_ID} -d message_thread_id=${TELEGRAM_TOPIC_ID} -d text="${MESSAGE}"
#
#            - name: Share unit test failure on Telegram
#              if: ${{ failure() }}
#              env:
#                  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#                  TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
#                  TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_CHANNEL_TOPIC_ID }}
#                  MESSAGE: 'unit tests FAILED on branch *[${{ github.head_ref }}]* üò≤‚ùå Check for details! üïµÔ∏è‚Äç‚ôÇÔ∏èüìä'
#              run: |
#                  curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage -d chat_id=${TELEGRAM_CHANNEL_ID} -d message_thread_id=${TELEGRAM_TOPIC_ID} -d text="${MESSAGE}"


            - name: Build Project
              run: ./gradlew assemble

#firs action
            - uses: appleboy/telegram-action@master
              with:
                  to: ${{ secrets.TELEGRAM_MOHSEN_ID }}
                  token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
                  format: markdown
                  message: 'Hi sir build branch *[${{ github.head_ref }}]* get started! üöÄ'
                  document: ${{ github.workspace }}/app/build/outputs/apk/debug/**.apk

#secound action
            - name: Share Apk on Telegram
              if: ${{ success() }}
              env:
                  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
                  TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
                  TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_CHANNEL_TOPIC_ID }}
                  MESSAGE: 'Debug APK Build for branch *[${{ github.head_ref }}]* in Progress! üèóÔ∏èüì±‚¨áÔ∏èüöÄüìé Keep an Eye'
              run: |
                APK_PATH=$(find ${{ github.workspace }}/app/build/outputs/apk/debug -name "*.apk" | head -n 1)
                if [ -f "$APK_PATH" ]; then
                curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" \
                -F chat_id="${TELEGRAM_CHANNEL_ID}" \
                -F message_thread_id="${TELEGRAM_TOPIC_ID}" \
                -F document=@"${APK_PATH}" \
                -F caption="${MESSAGE}"
                else
                echo "APK file not found."
                exit 1
                fi

            - name: Share app build failure on Telegram
              if: ${{ failure() }}
              env:
                  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
                  TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
                  TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_CHANNEL_TOPIC_ID }}
                  MESSAGE: 'App build FAILED on branch *[${{ github.head_ref }}]* üò≤‚ùå Check logs for details! üìëüîç'
              run: |
                  curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage -d chat_id=${TELEGRAM_CHANNEL_ID} -d message_thread_id=${TELEGRAM_TOPIC_ID} -d text="${MESSAGE}"

